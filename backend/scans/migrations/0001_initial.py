# Generated by Django 5.2.7 on 2025-10-24 00:51

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("time_start", models.DateTimeField(blank=True, null=True)),
                ("time_end", models.DateTimeField(blank=True, null=True)),
                ("restricted", models.BooleanField(default=False)),
                ("MicroServiceEnabled", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="MicroService",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("url", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("homeroom", models.CharField(max_length=4)),
                ("gradYear", models.IntegerField()),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("osis", models.CharField(blank=True, max_length=9, null=True)),
                ("caassID", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("last_known_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("device_type", models.CharField(blank=True, max_length=10, null=True)),
                ("online", models.BooleanField(default=False)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="scans.event",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="MicroService",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="scans.microservice",
            ),
        ),
        migrations.CreateModel(
            name="ScanInstance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("time", models.DateTimeField()),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="scans.event"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="scans.student"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="scans",
            field=models.ManyToManyField(
                blank=True, related_name="event_scanned", to="scans.scaninstance"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="allowed",
            field=models.ManyToManyField(blank=True, to="scans.student"),
        ),
    ]
